---
# ------------------------------------------------------------------------
# tasks file for deployment_user
# ------------------------------------------------------------------------

- name: check for sudo and admin groups
  group:
    name: "{{ item }}"
    state: present
    system: true
  with_items:
    - sudo
    - "{{ deployment_user_grps }}"

- name: check for deployment user, leave password as it is
  user:
    name: "{{ deployment_user_name }}"
    comment: "deployment user"
    groups: "sudo,{{ deployment_user_grps | join(',') }}"
    shell: "/bin/bash"
    state: present

- name: check for deploy user, set new password
  user:
    name: "{{ deployment_user_name }}"
    password: "{{ srv_init_deploy_user.password }}"
  when:
    - deployment_user_check_new_pw | bool

- name: set new random password
  set_fact:
    my_rnd_pass: "{{ lookup('password', '/dev/urandom length=16 chars=ascii_letters') }}"
  when:
    - deployment_user_check_rnd_pwd | bool

- name: check for deploy user, set random password
  user:
    name: "{{ deployment_user_name }}"
    password: "{{ my_rnd_pass }}"
  when:
    - deployment_user_check_rnd_pwd | bool

- name: deploy ssh public keys for ssh users
  authorized_key:
    user: "{{ deployment_user_name }}"
    key: "{{ item.pubkey }}"
    state: "{{ item.state | default('absent') }}"
  with_items:
    - "{{ deployment_user_pubkeys }}"

- name: configure sudoers file
  template:
    src: "sudoers.j2"
    dest: "/etc/sudoers"
    owner: "root"
    group: "root"
    mode: "0440"

- name: remove old vagrant sudoers
  file:
    name: "/etc/sudoers.d/vagrant"
    state: absent
  when: ansible_ssh_user == "vagrant"
